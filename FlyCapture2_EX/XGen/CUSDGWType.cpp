/*******************************************************************************
' CUSDGWType.c
'
' Copyright (c) 2004 by Miracom,Inc.
' All rights reserved.
'
' Generated by XGen 4.0
'
' Created at Thu Apr 24 11:25:03 KST 2008
'
' Author : Miracom
' Description : Generated by XGen4.3.0.1
'******************************************************************************/

#ifdef _AFXDLL
#include "..\\StdAfx.h"
#endif
#include "CUSDGWType.h"
//#include "include/CUSDGWType.h"


/* Sub serialize **************************************************************/
void serialize_CUSDGW_Cmn_Out_Tag(HTransformer former, CUSDGW_Cmn_Out_Tag *source_type)
{
    WriteMsgChar(former, source_type->h_status_value);
    WriteMsgSizedString(former, source_type->h_msg_code, get_last_space_pos(source_type->h_msg_code, 10));
    WriteMsgSizedString(former, source_type->h_msg, get_last_space_pos(source_type->h_msg, 200));
    WriteMsgSizedString(former, source_type->h_field_msg, get_last_space_pos(source_type->h_field_msg, 200));
    WriteMsgSizedString(former, source_type->h_db_err_msg, get_last_space_pos(source_type->h_db_err_msg, 200));
}

void serialize_CUSDGW_Send_In_Tag_data_list(HTransformer former, CUSDGW_Send_In_Tag_data_list *source_type)
{
    WriteMsgChar(former, source_type->item_type);
    WriteMsgSizedString(former, source_type->item_name, get_last_space_pos(source_type->item_name, 20));
    WriteMsgSizedString(former, source_type->item_value, get_last_space_pos(source_type->item_value, 100));
}
void serialize_CUSDGW_Send_In_Tag(HTransformer former, CUSDGW_Send_In_Tag *source_type)
{
    WriteMsgSizedString(former, source_type->h_passport, get_last_space_pos(source_type->h_passport, 100));
    WriteMsgChar(former, source_type->h_language);
    WriteMsgSizedString(former, source_type->h_factory, get_last_space_pos(source_type->h_factory, 10));
    WriteMsgSizedString(former, source_type->h_user_id, get_last_space_pos(source_type->h_user_id, 20));
    WriteMsgSizedString(former, source_type->h_password, get_last_space_pos(source_type->h_password, 20));
    WriteMsgChar(former, source_type->h_proc_step);
    WriteMsgInt(former, source_type->h_hist_seq);
    WriteMsgSizedString(former, source_type->back_time, get_last_space_pos(source_type->back_time, 14));
    WriteMsgSizedString(former, source_type->lot_id, get_last_space_pos(source_type->lot_id, 25));
    WriteMsgSizedString(former, source_type->res_id, get_last_space_pos(source_type->res_id, 20));
    WriteMsgInt(former, source_type->count);
    {
    int array_index = 0;
    int array_count = (1000 >= source_type->_size_data_list ? source_type->_size_data_list : 1000);
    WriteMsgInt(former, array_count);
    for(array_index = 0; array_index < array_count; array_index++)
        serialize_CUSDGW_Send_In_Tag_data_list(former, &source_type->data_list[array_index]);
    }
    WriteMsgSizedString(former, source_type->resv_field1, get_last_space_pos(source_type->resv_field1, 30));
    WriteMsgSizedString(former, source_type->resv_field2, get_last_space_pos(source_type->resv_field2, 30));
    WriteMsgSizedString(former, source_type->resv_field3, get_last_space_pos(source_type->resv_field3, 30));
    WriteMsgSizedString(former, source_type->resv_field4, get_last_space_pos(source_type->resv_field4, 30));
    WriteMsgSizedString(former, source_type->resv_field5, get_last_space_pos(source_type->resv_field5, 30));
}

void serialize_CUSDGW_SendAuto_In_Tag_data_tbl(HTransformer former, CUSDGW_SendAuto_In_Tag_data_tbl *source_type)
{
    WriteMsgInt(former, source_type->item_count);
    {
    int array_index = 0;
    int array_count = (100 >= source_type->_size_item ? source_type->_size_item : 100);
    WriteMsgInt(former, array_count);
    for(array_index = 0; array_index < array_count; array_index++)
        serialize_CUSDGW_SendAuto_In_Tag_data_tbl_item(former, &source_type->item[array_index]);
    }
}
void serialize_CUSDGW_SendAuto_In_Tag_data_tbl_item(HTransformer former, CUSDGW_SendAuto_In_Tag_data_tbl_item *source_type)
{
    WriteMsgSizedString(former, source_type->name, get_last_space_pos(source_type->name, 30));
    WriteMsgSizedString(former, source_type->value, get_last_space_pos(source_type->value, 30));
}
void serialize_CUSDGW_SendAuto_In_Tag(HTransformer former, CUSDGW_SendAuto_In_Tag *source_type)
{
    WriteMsgSizedString(former, source_type->h_passport, get_last_space_pos(source_type->h_passport, 100));
    WriteMsgChar(former, source_type->h_language);
    WriteMsgSizedString(former, source_type->h_factory, get_last_space_pos(source_type->h_factory, 10));
    WriteMsgSizedString(former, source_type->h_user_id, get_last_space_pos(source_type->h_user_id, 20));
    WriteMsgSizedString(former, source_type->h_password, get_last_space_pos(source_type->h_password, 20));
    WriteMsgChar(former, source_type->h_proc_step);
    WriteMsgInt(former, source_type->h_hist_seq);
    WriteMsgSizedString(former, source_type->back_time, get_last_space_pos(source_type->back_time, 14));
    WriteMsgSizedString(former, source_type->lot_id, get_last_space_pos(source_type->lot_id, 25));
    WriteMsgSizedString(former, source_type->res_id, get_last_space_pos(source_type->res_id, 20));
    WriteMsgInt(former, source_type->count);
    {
    int array_index = 0;
    int array_count = (1000 >= source_type->_size_data_tbl ? source_type->_size_data_tbl : 1000);
    WriteMsgInt(former, array_count);
    for(array_index = 0; array_index < array_count; array_index++)
        serialize_CUSDGW_SendAuto_In_Tag_data_tbl(former, &source_type->data_tbl[array_index]);
    }
    WriteMsgSizedString(former, source_type->resv_field1, get_last_space_pos(source_type->resv_field1, 30));
    WriteMsgSizedString(former, source_type->resv_field2, get_last_space_pos(source_type->resv_field2, 30));
    WriteMsgSizedString(former, source_type->resv_field3, get_last_space_pos(source_type->resv_field3, 30));
    WriteMsgSizedString(former, source_type->resv_field4, get_last_space_pos(source_type->resv_field4, 30));
    WriteMsgSizedString(former, source_type->resv_field5, get_last_space_pos(source_type->resv_field5, 30));
}

void serialize_CUSDGW_ViewSanpoData_In_Tag(HTransformer former, CUSDGW_ViewSanpoData_In_Tag *source_type)
{
    WriteMsgSizedString(former, source_type->h_passport, get_last_space_pos(source_type->h_passport, 100));
    WriteMsgChar(former, source_type->h_language);
    WriteMsgSizedString(former, source_type->h_factory, get_last_space_pos(source_type->h_factory, 10));
    WriteMsgSizedString(former, source_type->h_user_id, get_last_space_pos(source_type->h_user_id, 20));
    WriteMsgSizedString(former, source_type->h_password, get_last_space_pos(source_type->h_password, 20));
    WriteMsgChar(former, source_type->h_proc_step);
    WriteMsgSizedString(former, source_type->lot_id, get_last_space_pos(source_type->lot_id, 25));
    WriteMsgLong(former, source_type->seq);
    WriteMsgSizedString(former, source_type->res_id, get_last_space_pos(source_type->res_id, 10));
    WriteMsgSizedString(former, source_type->item_value1, get_last_space_pos(source_type->item_value1, 30));
    WriteMsgSizedString(former, source_type->from_time, get_last_space_pos(source_type->from_time, 14));
    WriteMsgSizedString(former, source_type->to_time, get_last_space_pos(source_type->to_time, 14));
    WriteMsgSizedString(former, source_type->next_lot_id, get_last_space_pos(source_type->next_lot_id, 25));
    WriteMsgLong(former, source_type->next_seq);
    WriteMsgLong(former, source_type->next_data_seq);
}

void serialize_CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl(HTransformer former, CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl *source_type)
{
    WriteMsgSizedString(former, source_type->factory, get_last_space_pos(source_type->factory, 10));
    WriteMsgSizedString(former, source_type->lot_id, get_last_space_pos(source_type->lot_id, 25));
    WriteMsgLong(former, source_type->seq);
    WriteMsgLong(former, source_type->data_seq);
    WriteMsgSizedString(former, source_type->tran_time, get_last_space_pos(source_type->tran_time, 14));
    WriteMsgSizedString(former, source_type->res_id, get_last_space_pos(source_type->res_id, 10));
    WriteMsgChar(former, source_type->item_type);
    WriteMsgLong(former, source_type->count);
    WriteMsgSizedString(former, source_type->item_value1, get_last_space_pos(source_type->item_value1, 30));
    WriteMsgSizedString(former, source_type->item_value2, get_last_space_pos(source_type->item_value2, 30));
    WriteMsgSizedString(former, source_type->item_value3, get_last_space_pos(source_type->item_value3, 30));
    WriteMsgSizedString(former, source_type->item_value4, get_last_space_pos(source_type->item_value4, 30));
    WriteMsgSizedString(former, source_type->item_value5, get_last_space_pos(source_type->item_value5, 30));
    WriteMsgSizedString(former, source_type->item_value6, get_last_space_pos(source_type->item_value6, 30));
    WriteMsgSizedString(former, source_type->item_value7, get_last_space_pos(source_type->item_value7, 30));
    WriteMsgSizedString(former, source_type->item_value8, get_last_space_pos(source_type->item_value8, 30));
    WriteMsgSizedString(former, source_type->item_value9, get_last_space_pos(source_type->item_value9, 30));
    WriteMsgSizedString(former, source_type->item_value10, get_last_space_pos(source_type->item_value10, 30));
    WriteMsgSizedString(former, source_type->item_value11, get_last_space_pos(source_type->item_value11, 30));
    WriteMsgSizedString(former, source_type->item_value12, get_last_space_pos(source_type->item_value12, 30));
    WriteMsgSizedString(former, source_type->item_value13, get_last_space_pos(source_type->item_value13, 30));
    WriteMsgSizedString(former, source_type->item_value14, get_last_space_pos(source_type->item_value14, 30));
    WriteMsgSizedString(former, source_type->item_value15, get_last_space_pos(source_type->item_value15, 30));
    WriteMsgSizedString(former, source_type->item_value16, get_last_space_pos(source_type->item_value16, 30));
    WriteMsgSizedString(former, source_type->item_value17, get_last_space_pos(source_type->item_value17, 30));
    WriteMsgSizedString(former, source_type->item_value18, get_last_space_pos(source_type->item_value18, 30));
    WriteMsgSizedString(former, source_type->item_value19, get_last_space_pos(source_type->item_value19, 30));
    WriteMsgSizedString(former, source_type->item_value20, get_last_space_pos(source_type->item_value20, 30));
    WriteMsgSizedString(former, source_type->item_value21, get_last_space_pos(source_type->item_value21, 30));
    WriteMsgSizedString(former, source_type->item_value22, get_last_space_pos(source_type->item_value22, 30));
    WriteMsgSizedString(former, source_type->item_value23, get_last_space_pos(source_type->item_value23, 30));
    WriteMsgSizedString(former, source_type->item_value24, get_last_space_pos(source_type->item_value24, 30));
    WriteMsgSizedString(former, source_type->item_value25, get_last_space_pos(source_type->item_value25, 30));
    WriteMsgSizedString(former, source_type->item_value26, get_last_space_pos(source_type->item_value26, 30));
    WriteMsgSizedString(former, source_type->item_value27, get_last_space_pos(source_type->item_value27, 30));
    WriteMsgSizedString(former, source_type->item_value28, get_last_space_pos(source_type->item_value28, 30));
    WriteMsgSizedString(former, source_type->item_value29, get_last_space_pos(source_type->item_value29, 30));
    WriteMsgSizedString(former, source_type->item_value30, get_last_space_pos(source_type->item_value30, 30));
}
void serialize_CUSDGW_ViewSanpoData_Out_Tag(HTransformer former, CUSDGW_ViewSanpoData_Out_Tag *source_type)
{
    WriteMsgChar(former, source_type->h_status_value);
    WriteMsgSizedString(former, source_type->h_msg_code, get_last_space_pos(source_type->h_msg_code, 10));
    WriteMsgSizedString(former, source_type->h_msg, get_last_space_pos(source_type->h_msg, 200));
    WriteMsgSizedString(former, source_type->h_field_msg, get_last_space_pos(source_type->h_field_msg, 200));
    WriteMsgSizedString(former, source_type->h_db_err_msg, get_last_space_pos(source_type->h_db_err_msg, 200));
    WriteMsgLong(former, source_type->count);
    WriteMsgSizedString(former, source_type->next_lot_id, get_last_space_pos(source_type->next_lot_id, 25));
    WriteMsgLong(former, source_type->next_seq);
    WriteMsgLong(former, source_type->next_data_seq);
    {
    int array_index = 0;
    int array_count = (1000 >= source_type->_size_sanpo_data_tbl ? source_type->_size_sanpo_data_tbl : 1000);
    WriteMsgInt(former, array_count);
    for(array_index = 0; array_index < array_count; array_index++)
        serialize_CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl(former, &source_type->sanpo_data_tbl[array_index]);
    }
}

void serialize_CUSInsp_Lbl_In_Tag(HTransformer former, CUSInsp_Lbl_In_Tag *source_type)
{
    WriteMsgSizedString(former, source_type->h_passport, get_last_space_pos(source_type->h_passport, 100));
    WriteMsgChar(former, source_type->h_language);
    WriteMsgSizedString(former, source_type->h_factory, get_last_space_pos(source_type->h_factory, 10));
    WriteMsgSizedString(former, source_type->h_user_id, get_last_space_pos(source_type->h_user_id, 20));
    WriteMsgSizedString(former, source_type->h_password, get_last_space_pos(source_type->h_password, 20));
    WriteMsgChar(former, source_type->h_proc_step);
    WriteMsgInt(former, source_type->h_hist_seq);
    WriteMsgSizedString(former, source_type->back_time, get_last_space_pos(source_type->back_time, 14));
    WriteMsgSizedString(former, source_type->lot_id, get_last_space_pos(source_type->lot_id, 25));
    WriteMsgSizedString(former, source_type->res_id, get_last_space_pos(source_type->res_id, 20));
    WriteMsgDouble(former, source_type->qty);
    WriteMsgSizedString(former, source_type->resv_field1, get_last_space_pos(source_type->resv_field1, 30));
    WriteMsgSizedString(former, source_type->resv_field2, get_last_space_pos(source_type->resv_field2, 30));
    WriteMsgSizedString(former, source_type->resv_field3, get_last_space_pos(source_type->resv_field3, 30));
    WriteMsgSizedString(former, source_type->resv_field4, get_last_space_pos(source_type->resv_field4, 30));
    WriteMsgSizedString(former, source_type->resv_field5, get_last_space_pos(source_type->resv_field5, 30));
}


/* Sub transform **************************************************************/
void transform_CUSDGW_Cmn_Out_Tag(HTransformer former, CUSDGW_Cmn_Out_Tag *target_type)
{
    target_type->h_status_value = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_msg_code, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_msg, 200, ' ');
    ReadMsgStringPadding(former, target_type->h_field_msg, 200, ' ');
    ReadMsgStringPadding(former, target_type->h_db_err_msg, 200, ' ');
}

void transform_CUSDGW_Send_In_Tag_data_list(HTransformer former, CUSDGW_Send_In_Tag_data_list *target_type)
{
    target_type->item_type = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->item_name, 20, ' ');
    ReadMsgStringPadding(former, target_type->item_value, 100, ' ');
}
void transform_CUSDGW_Send_In_Tag(HTransformer former, CUSDGW_Send_In_Tag *target_type)
{
    ReadMsgStringPadding(former, target_type->h_passport, 100, ' ');
    target_type->h_language = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_factory, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_user_id, 20, ' ');
    ReadMsgStringPadding(former, target_type->h_password, 20, ' ');
    target_type->h_proc_step = ReadMsgChar(former);
    target_type->h_hist_seq = ReadMsgInt(former);
    ReadMsgStringPadding(former, target_type->back_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->lot_id, 25, ' ');
    ReadMsgStringPadding(former, target_type->res_id, 20, ' ');
    target_type->count = ReadMsgInt(former);
    {
    int array_index = 0;
    target_type->_size_data_list = ReadMsgInt(former);
    for(array_index = 0; array_index < target_type->_size_data_list ; array_index++)
        transform_CUSDGW_Send_In_Tag_data_list(former, &target_type->data_list[array_index]);
    }
    ReadMsgStringPadding(former, target_type->resv_field1, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field2, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field3, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field4, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field5, 30, ' ');
}

void transform_CUSDGW_SendAuto_In_Tag_data_tbl(HTransformer former, CUSDGW_SendAuto_In_Tag_data_tbl *target_type)
{
    target_type->item_count = ReadMsgInt(former);
    {
    int array_index = 0;
    target_type->_size_item = ReadMsgInt(former);
    for(array_index = 0; array_index < target_type->_size_item ; array_index++)
        transform_CUSDGW_SendAuto_In_Tag_data_tbl_item(former, &target_type->item[array_index]);
    }
}
void transform_CUSDGW_SendAuto_In_Tag_data_tbl_item(HTransformer former, CUSDGW_SendAuto_In_Tag_data_tbl_item *target_type)
{
    ReadMsgStringPadding(former, target_type->name, 30, ' ');
    ReadMsgStringPadding(former, target_type->value, 30, ' ');
}
void transform_CUSDGW_SendAuto_In_Tag(HTransformer former, CUSDGW_SendAuto_In_Tag *target_type)
{
    ReadMsgStringPadding(former, target_type->h_passport, 100, ' ');
    target_type->h_language = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_factory, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_user_id, 20, ' ');
    ReadMsgStringPadding(former, target_type->h_password, 20, ' ');
    target_type->h_proc_step = ReadMsgChar(former);
    target_type->h_hist_seq = ReadMsgInt(former);
    ReadMsgStringPadding(former, target_type->back_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->lot_id, 25, ' ');
    ReadMsgStringPadding(former, target_type->res_id, 20, ' ');
    target_type->count = ReadMsgInt(former);
    {
    int array_index = 0;
    target_type->_size_data_tbl = ReadMsgInt(former);
    for(array_index = 0; array_index < target_type->_size_data_tbl ; array_index++)
        transform_CUSDGW_SendAuto_In_Tag_data_tbl(former, &target_type->data_tbl[array_index]);
    }
    ReadMsgStringPadding(former, target_type->resv_field1, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field2, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field3, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field4, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field5, 30, ' ');
}

void transform_CUSDGW_ViewSanpoData_In_Tag(HTransformer former, CUSDGW_ViewSanpoData_In_Tag *target_type)
{
    ReadMsgStringPadding(former, target_type->h_passport, 100, ' ');
    target_type->h_language = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_factory, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_user_id, 20, ' ');
    ReadMsgStringPadding(former, target_type->h_password, 20, ' ');
    target_type->h_proc_step = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->lot_id, 25, ' ');
    target_type->seq = (long)ReadMsgLong(former);
    ReadMsgStringPadding(former, target_type->res_id, 10, ' ');
    ReadMsgStringPadding(former, target_type->item_value1, 30, ' ');
    ReadMsgStringPadding(former, target_type->from_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->to_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->next_lot_id, 25, ' ');
    target_type->next_seq = (long)ReadMsgLong(former);
    target_type->next_data_seq = (long)ReadMsgLong(former);
}

void transform_CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl(HTransformer former, CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl *target_type)
{
    ReadMsgStringPadding(former, target_type->factory, 10, ' ');
    ReadMsgStringPadding(former, target_type->lot_id, 25, ' ');
    target_type->seq = (long)ReadMsgLong(former);
    target_type->data_seq = (long)ReadMsgLong(former);
    ReadMsgStringPadding(former, target_type->tran_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->res_id, 10, ' ');
    target_type->item_type = ReadMsgChar(former);
    target_type->count = (long)ReadMsgLong(former);
    ReadMsgStringPadding(former, target_type->item_value1, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value2, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value3, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value4, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value5, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value6, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value7, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value8, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value9, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value10, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value11, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value12, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value13, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value14, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value15, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value16, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value17, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value18, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value19, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value20, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value21, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value22, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value23, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value24, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value25, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value26, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value27, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value28, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value29, 30, ' ');
    ReadMsgStringPadding(former, target_type->item_value30, 30, ' ');
}
void transform_CUSDGW_ViewSanpoData_Out_Tag(HTransformer former, CUSDGW_ViewSanpoData_Out_Tag *target_type)
{
    target_type->h_status_value = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_msg_code, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_msg, 200, ' ');
    ReadMsgStringPadding(former, target_type->h_field_msg, 200, ' ');
    ReadMsgStringPadding(former, target_type->h_db_err_msg, 200, ' ');
    target_type->count = (long)ReadMsgLong(former);
    ReadMsgStringPadding(former, target_type->next_lot_id, 25, ' ');
    target_type->next_seq = (long)ReadMsgLong(former);
    target_type->next_data_seq = (long)ReadMsgLong(former);
    {
    int array_index = 0;
    target_type->_size_sanpo_data_tbl = ReadMsgInt(former);
    for(array_index = 0; array_index < target_type->_size_sanpo_data_tbl ; array_index++)
        transform_CUSDGW_ViewSanpoData_Out_Tag_sanpo_data_tbl(former, &target_type->sanpo_data_tbl[array_index]);
    }
}

void transform_CUSInsp_Lbl_In_Tag(HTransformer former, CUSInsp_Lbl_In_Tag *target_type)
{
    ReadMsgStringPadding(former, target_type->h_passport, 100, ' ');
    target_type->h_language = ReadMsgChar(former);
    ReadMsgStringPadding(former, target_type->h_factory, 10, ' ');
    ReadMsgStringPadding(former, target_type->h_user_id, 20, ' ');
    ReadMsgStringPadding(former, target_type->h_password, 20, ' ');
    target_type->h_proc_step = ReadMsgChar(former);
    target_type->h_hist_seq = ReadMsgInt(former);
    ReadMsgStringPadding(former, target_type->back_time, 14, ' ');
    ReadMsgStringPadding(former, target_type->lot_id, 25, ' ');
    ReadMsgStringPadding(former, target_type->res_id, 20, ' ');
    target_type->qty = ReadMsgDouble(former);
    ReadMsgStringPadding(former, target_type->resv_field1, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field2, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field3, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field4, 30, ' ');
    ReadMsgStringPadding(former, target_type->resv_field5, 30, ' ');
}

